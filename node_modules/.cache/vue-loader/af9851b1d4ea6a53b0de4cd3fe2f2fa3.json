{"remainingRequest":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jiro/Documents/myc/justjcurtis.github.io/src/views/project/aMaze/aMaze.vue?vue&type=style&index=0&id=314e19de&scoped=true&lang=css&","dependencies":[{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/src/views/project/aMaze/aMaze.vue","mtime":1589717793893},{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/css-loader/dist/cjs.js","mtime":1589382293659},{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1589382294617},{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/postcss-loader/src/index.js","mtime":1589382294479},{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1589382281691},{"path":"/home/jiro/Documents/myc/justjcurtis.github.io/node_modules/vue-loader/lib/index.js","mtime":1589382294617}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgxIHsKICBjb2xvcjogYmxhY2s7Cn0K"},{"version":3,"sources":["aMaze.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA","file":"aMaze.vue","sourceRoot":"src/views/project/aMaze","sourcesContent":["<template>\n  <div>\n    <h1>aMaze</h1>\n    <vue-p5 @sketch=\"{sketch}\"></vue-p5>\n  </div>\n</template>\n\n<script>\nimport VueP5 from \"vue-p5\";\nimport Maze from \"./maze\";\nimport AStarSeeker from \"./aStarSeeker\";\nexport default {\n  name: \"aMaze\",\n  components: {\n    \"vue-p5\": VueP5\n  },\n  methods: {\n    sketch(p5) {\n        console.log(p5)\n      let w;\n      let h;\n      let divisions;\n      let maze;\n      let seeker;\n      let start = false;\n      let generationDone = false;\n      let searchDone = false;\n      let search = false;\n      let autoloop = false;\n      let revisitRate = 0.5;\n\n      function progress() {\n        if (!start) {\n          start = true;\n          return;\n        }\n        if (searchDone) {\n          reset();\n        }\n        if (generationDone) {\n          if (!search) {\n            search = true;\n          }\n        }\n      }\n\n      function reset() {\n        if (generationDone && search && searchDone) {\n          generationDone = false;\n          search = false;\n          searchDone = false;\n          seeker.reset();\n          maze.reset();\n        }\n      }\n\n      p5.setup = () => {\n        w = window.innerHeight;\n        h = window.innerWidth;\n        let MazeMargin = 50;\n        divisions = 25;\n        maze = new Maze(\n          w - MazeMargin,\n          h - MazeMargin,\n          Math.floor(Math.min(w, h) / divisions),\n          MazeMargin / 2,\n          MazeMargin / 2\n        );\n        seeker = new AStarSeeker(false, true);\n        p5.resizeCanvas(400, 400);\n        // frameRate(5)\n      };\n      p5.draw = p5 => {\n        p5.background(51);\n        if (!generationDone) {\n          for (let i = 0; i < Math.floor((divisions / 25) * 15); i++) {\n            // for(let i = 0; i<100000; i++){\n            if (start) {\n              search = false;\n              searchDone = false;\n              maze.generate(revisitRate);\n              generationDone = maze.generated;\n            }\n          }\n        } else {\n          generationDone = true;\n          if (generationDone && search) {\n            if (!seeker.grid) {\n              seeker.setGrid(maze.grid, maze.cols, maze.rows);\n            }\n            for (let i = 0; i < Math.floor((divisions / 25) * 5); i++) {\n              // for(let i = 0; i<100000; i++){\n              let result = seeker.seek();\n              if (result) {\n                if (result[0] || result[1]) {\n                  if (!searchDone) {\n                    if (autoloop) {\n                      setTimeout(() => {\n                        searchDone = true;\n                      }, 1500);\n                    } else {\n                      searchDone = true;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        maze.render(seeker);\n        if (autoloop) {\n          progress();\n        }\n      };\n      p5.keyPressed = p5 => {\n        if (p5.key == \"a\") {\n          autoloop = !autoloop;\n          return;\n        }\n        progress();\n      };\n    }\n  }\n};\n\n const P5 = require('p5');\n new P5(this.sketch);\n</script>\n\n<style scoped>\nh1 {\n  color: black;\n}\n</style>"]}]}